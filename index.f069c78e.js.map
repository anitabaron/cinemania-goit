{"mappings":"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","sources":["src/js/header.js","src/js/index.js","src/js/hero.js","src/js/fetch-api.js"],"sourcesContent":["const mobileMenuButton = document.getElementById('menu');\nconst menuNav = document.getElementById('navi');\nconst overlay = document.getElementById('overlay');\n\nmobileMenuButton.addEventListener('click', () => {\n  menuNav.style.left = '0';\n  overlay.style.display = 'block';\n});\n\noverlay.addEventListener('click', () => {\n  menuNav.style.left = '-64%';\n  overlay.style.display = 'none';\n});\n\n//\nconst LightSwitcher = document.getElementById('switch');\nlet isLight = localStorage.getItem('isLight') === 'true';\n\ndocument.body.classList.toggle('light', isLight);\n\nLightSwitcher.onclick = function () {\n  isLight = !isLight;\n  document.body.classList.toggle('light', isLight);\n  localStorage.setItem('isLight', isLight);\n};\n\n// page link color\n\nconst currentUrl = window.location.href;\n\nconst navLink = document.querySelectorAll(\n  '.mobile-menu__link, .header__nav-link'\n);\n\nnavLink[0].classList.add('current__nav-link');\nnavLink[3].classList.add('current__nav-link');\n\nif (currentUrl.includes('index')) {\n  return;\n} else if (currentUrl.includes('catalog')) {\n  navLink[0].classList.remove('current__nav-link');\n  navLink[3].classList.remove('current__nav-link');\n  navLink[1].classList.add('current__nav-link');\n  navLink[4].classList.add('current__nav-link');\n  return;\n} else if (currentUrl.includes('library')) {\n  navLink[0].classList.remove('current__nav-link');\n  navLink[3].classList.remove('current__nav-link');\n  navLink[1].classList.remove('current__nav-link');\n  navLink[4].classList.remove('current__nav-link');\n  navLink[2].classList.add('current__nav-link');\n  navLink[5].classList.add('current__nav-link');\n  return;\n}\n","import './header';\nimport './hero';\nimport './movie-list';\nimport './upcoming';\nimport './footer';\nimport './my-library';\nimport './modal';\nimport './oops';\nimport './buttons-icons';\nimport './fetch-api';\n","function updateTextHero(description) {\n  const heroText = document.getElementById('hero_text');\n\n  if (window.innerWidth >= 768) {\n    heroText.textContent =\n      description ||\n      \"Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.\";\n  } else {\n    heroText.textContent =\n      description ||\n      \"Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers.\";\n    heroText.classList.add('hero_text_2');\n  }\n}\nfunction createDefaultHeroSection() {\n  const heroSection = document.querySelector('#hero'); // Usuń znak '#'\n\n  // Ustawienie zawartości\n  heroSection.innerHTML = `\n    <div class=\"hero_background container\">\n      <h2 class=\"hero__text-1\">Let’s Make Your Own Cinema</h2>\n      <h3 class=\"hero__text-2\" id=\"hero_text\">Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers.</h3>\n      <button class=\"hero__button\" onclick=\"window.location.href='catalog.html';\">\n        <span class=\"hero__span-button\">Get Started</span>\n      </button>\n    </div>\n  `;\n\n  updateTextHero();\n\n  window.addEventListener('resize', updateTextHero);\n}\n\nfunction updateTextHero() {}\n\nconst createHeroMovie = results => {\n  if (results.data.results.length === 0) {\n    console.error('No movies found');\n    createDefaultHeroSection();\n    return;\n  }\n};\n// const apiKey = 'bf204b214cbfbbf1225f0513f78ae506';\n// const apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`;\n","import axios from 'axios';\n\nconst API_KEY = '682127ed972e56f6bb70ae743d23c1d7';\n\n// ----------------------------------------\n\nconst fullStar = `\n<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"rgba(248, 65, 25, 1)\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_405_766)\" stroke-linejoin=\"round\"/>\n  <defs>\n    <linearGradient id=\"paint0_linear_405_766\" x1=\"3.375\" y1=\"2.625\" x2=\"13.5\" y2=\"16.5\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#F84119\"/>\n      <stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n    </linearGradient>\n  </defs>\n</svg>`;\n\nconst halfStar = `\n<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"rgba(248, 65, 25, 1)\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_405_766)\" stroke-linejoin=\"round\"/>\n  <defs>\n    <linearGradient id=\"paint0_linear_405_766\" x1=\"3.375\" y1=\"2.625\" x2=\"13.5\" y2=\"16.5\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#F84119\"/>\n      <stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n    </linearGradient>\n  </defs>\n  <mask id=\"halfMask\">\n    <rect x=\"0\" y=\"0\" width=\"9\" height=\"18\" fill=\"white\"/>\n  </mask>\n  <path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" fill=\"rgba(248, 65, 25, 1)\" mask=\"url(#halfMask)\"/>\n</svg>`;\n\nconst emptyStar = `\n<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" stroke=\"rgba(248, 65, 25, 1)\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke-linejoin=\"round\"/>\n</svg>`;\n\n// ----------------------------------------------\n\nconst generateStars = rating => {\n  let fullStars = Math.floor(rating);\n  let halfStars = rating % 1 >= 0.5 ? 1 : 0;\n  let emptyStars = 5 - fullStars - halfStars;\n\n  console.log('Pełne gwiazdki:', fullStars);\n  console.log('Połówkowe gwiazdki:', halfStars);\n  console.log('Puste gwiazdki:', emptyStars);\n\n  return `${fullStar.repeat(fullStars)}${halfStar.repeat(\n    halfStars\n  )}${emptyStar.repeat(emptyStars)}`;\n};\n// ---------------------------------------------\nconst params = {\n  page: 1,\n  language: 'en-US',\n  api_key: '682127ed972e56f6bb70ae743d23c1d7',\n};\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n};\n\nconst urls = {\n  trendMoviesDay: `https://api.themoviedb.org/3/trending/movie/day`,\n  trendMoviesWeek: `https://api.themoviedb.org/3/trending/movie/week`,\n  upcomingMovies: `https://api.themoviedb.org/3/movie/upcoming`,\n};\n\nconst createHeroMovie = results => {\n  const heroSection = document.querySelector('#hero');\n\n  if (\n    !results ||\n    !results.data ||\n    !results.data.results ||\n    results.data.results.length === 0\n  ) {\n    console.error('Invalid results data');\n    return;\n  }\n\n  const randomMovieIndex = Math.floor(\n    Math.random() * results.data.results.length\n  );\n  const topDayMovie = results.data.results[randomMovieIndex];\n\n  if (!topDayMovie) {\n    console.error('No movie data available');\n    return;\n  }\n\n  const cutText = (text, maxLength) => {\n    return text.length > maxLength ? text.slice(0, maxLength) + '...' : text;\n  };\n\n  const maxLength = 200;\n  const truncatedOverview = cutText(topDayMovie.overview, maxLength);\n\n  const rating = topDayMovie.vote_average / 2;\n  console.log('Ocena z API:', rating);\n  const starsHTML = generateStars(rating);\n\n  heroSection.innerHTML = `\n    <div class=\"hero__background container\" \n      style=\"background-image: linear-gradient(86.77deg, rgb(17, 17, 17) 30.38%, rgba(17, 17, 17, 0) 65.61%), \n      url(https://image.tmdb.org/t/p/original${topDayMovie.backdrop_path})\">\n      <h2 class=\"hero__text-1\">${topDayMovie.title}</h2>\n      <ul class=\"movielist__rating-hero\">\n        ${starsHTML}\n      </ul>\n      <p class=\"hero__text-2\" id=\"hero_text\">${truncatedOverview}</p>\n      <div class=\"buttons\">\n        <button class=\"btn__hero-1\">Watch trailer</button>\n        <button class=\"btn__hero-2\">More details</button>\n      </div>\n    </div>`;\n};\n\nconst genres = [\n\t{ \"id\": 28, \"name\": \"Action\" },\n\t{ \"id\": 12, \"name\": \"Adventure\" },\n\t{ \"id\": 16, \"name\": \"Animation\" },\n\t{ \"id\": 35, \"name\": \"Comedy\" },\n\t{ \"id\": 80, \"name\": \"Crime\" },\n\t{ \"id\": 99, \"name\": \"Documentary\" },\n\t{ \"id\": 18, \"name\": \"Drama\" },\n\t{ \"id\": 10751, \"name\": \"Family\" },\n\t{ \"id\": 14, \"name\": \"Fantasy\" },\n\t{ \"id\": 36, \"name\": \"History\" },\n\t{ \"id\": 27, \"name\": \"Horror\" },\n\t{ \"id\": 10402, \"name\": \"Music\" },\n\t{ \"id\": 9648, \"name\": \"Mystery\" },\n\t{ \"id\": 10749, \"name\": \"Romance\" },\n\t{ \"id\": 878, \"name\": \"Science Fiction\" },\n\t{ \"id\": 10770, \"name\": \"TV Movie\" },\n\t{ \"id\": 53, \"name\": \"Thriller\" },\n\t{ \"id\": 10752, \"name\": \"War\" },\n\t{ \"id\": 37, \"name\": \"Western\" },\n]\n\nconst movieGenresCompare = (arr1, arr2) => {\n\tconst finalArr = [];\n\tfor (i = 0; i < arr1.length; i += 1) {\n\t\t\t\tif (arr2.includes(arr1[i].id)) {\n\t\t\t\t\tfinalArr.push(arr1[i].name)\n\t\t\t\t}\n\t\t\t}\n\n\treturn finalArr.slice(0,2).join(\", \");\n}\n  \nconst TopWeekMovieBox = (index, results) => {\n  const TopWeekMovie = results.data.results[index];\n  const releaseYear = TopWeekMovie.release_date.slice(0, 4);\n  const movieGenresIds = TopWeekMovie.genre_ids;\n  const movieGenres = movieGenresCompare(genres, movieGenresIds);\n  return `<li>\n  <div class=\"movielist-item\"\n                   style=\"background-image: linear-gradient(180deg, rgba(0, 0, 0, 0.2) 63.48%, rgba(0, 0, 0, 0.9) 92.16%), url(https://image.tmdb.org/t/p/w500${TopWeekMovie.backdrop_path});\n                    background-repeat: no-repeat;\n                    background-size: cover; \n                    background-position: center\">\n                    <div class=\"movielist__information-box\">\n                    <div class=\"movielist__title-box\">\n\t\t\t\t\t\t<p class =\"movielist__movie-title\">${ TopWeekMovie.title }</p>\n\t\t\t\t\t\t<p class =\"movielist__movie-genre\"> ${ movieGenres } | ${ releaseYear }</p>\n\t\t\t\t\t    </div>\n                        <ul class=\"movielist__movie-rating\">\n\t\t\t\t\t\t<li>\n            <svg width=\"10px\" height=\"10px\">\n  <use href=\"./images/icons_desktop.svg#icon_star_large\"></use>\n</svg>\n  </li>\n\t\t\t\t\t\t<li>*</li>\n\t\t\t\t\t\t<li>*</li>\n\t\t\t\t\t\t<li>*</li>\n\t\t\t\t\t\t<li>*</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n                    </div>\n                    </li>\n\t\t\t\t\t`;\n\n  //   `<li class=\"movielist__movie-itemt\">\n  //     <img class=\"movielist__movie-image\"\n  //         src=\"https://image.tmdb.org/t/p/w500${TopWeekMovie.backdrop_path}\"\n  //         alt=\"Poster of ${TopWeekMovie.title}\"\n  //     />\n  //             <div class=\"movielist__movie-description\">\n  //     <h3>${TopWeekMovie.title}</h3>\n  //                 <div class=\"movielist__-movie-details\">\n  //         <p>Drama, Action</p>\n  //         <p>${TopWeekMovie.release_date}</p>\n  //       </div>\n  //   </div>\n  //   <ul class=\"movielist__rating-list\">\n  //     <li>*</li>\n  //     <li>*</li>\n  //     <li>*</li>\n  //     <li>*</li>\n  //     <li>*</li>\n  //   </ul>\n  // </li>`;\n};\n\nconst createWeekMovies = results => {\n  const weekMoviesSection = document.querySelector('#catalogMovielist');\n  const weekMoviesSectionFragment =\n    TopWeekMovieBox(0, results) +\n    TopWeekMovieBox(1, results) +\n    TopWeekMovieBox(2, results);\n  weekMoviesSection.innerHTML = weekMoviesSectionFragment;\n};\n\nconst createUpcomingMovie = results => {\n  const upcomingSection = document.querySelector('#upcoming');\n  const randomMovie = Math.floor(Math.random() * results.data.results.length);\n  const upcomingMovie = results.data.results[randomMovie];\n  upcomingSection.innerHTML = `<h2 class=\"upcoming-header-one\">UPCOMING THIS MONTH</h2>\n        <div class=\"upcoming__film-box\">\n        <img class=\"upcoming-image\"\n        src=\"https://image.tmdb.org/t/p/w500${upcomingMovie.backdrop_path}\"\n       \n        alt=\"Logo of this page\"\n        />\n            <div class=\"upcoming__film-details-box\">\n                <h3 class=\"upcoming-header-two\">${upcomingMovie.title}</h3>\n                <div class=\"upcoming__film-details\">\n                    <div>\n\t\t\t\t\t\t<p class=\"upcoming-p\">Release date</p>\n\t\t\t\t\t\t<p class=\"upcoming-p\">Vote / Votes</p>\n\t\t\t\t\t\t<p class=\"upcoming-p\">Popularit</p>\n\t\t\t\t\t\t<p class=\"upcoming-p\">Genre</p>\n\t\t\t\t\t</div>\n                    <div>\n\t\t\t\t\t\t<p class=\"upcoming-p-two upcoming-p-style\">03.03.2023</p>\n\t\t\t\t\t\t<p class=\"upcoming__film-rating upcoming-p-style\"><span class=\"upcoming-box\">7.3</span>  /  <span class=\"upcoming-box\">1260</span></p>\n\t\t\t\t\t\t<p class=\"upcoming-p-style\">99.9</p>\n\t\t\t\t\t\t<p>Comedy, action</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<h4 class=\"upcoming-header-three\">ABOUT</h4>\n\t\t\t\t<p class=\"upcoming-p-three\">${upcomingMovie.overview}</p>\n\t\t\t    <button class=\"btn btn__big btn__orange-gradient\">Add to my library</button>`;\n};\n\nconst homePageApiData = url =>\n  axios\n    .get(url, { params, ...options })\n    .then(results => {\n      if (url.includes('day')) {\n        //console.log(\"day:\", results)\n        createHeroMovie(results);\n        return;\n      }\n      if (url.includes('week')) {\n        //console.log(\"week:\", results)\n        createWeekMovies(results);\n        return;\n      }\n      if (url.includes('upcoming')) {\n        //console.log(\"upcoming:\", results)\n        createUpcomingMovie(results);\n        return;\n      }\n    })\n    .catch(error => console.log(error));\n\nconst homePageContent = async () =>\n  await Promise.all([\n    homePageApiData(urls.trendMoviesDay),\n    homePageApiData(urls.trendMoviesWeek),\n    homePageApiData(urls.upcomingMovies),\n  ]);\n\nhomePageContent();\n"],"names":["mobileMenuButton","document","getElementById","menuNav","overlay","addEventListener","style","left","display","LightSwitcher","isLight","localStorage","getItem","body","classList","toggle","onclick","setItem","currentUrl","window","location","href","navLink","querySelectorAll","add","includes","remove","parcelRequire","$bpxeT","$0d419fa112e607df$var$params","page","language","api_key","$0d419fa112e607df$var$options","method","headers","accept","Authorization","concat","$0d419fa112e607df$var$urls","$0d419fa112e607df$var$createHeroMovie","results","heroSection","querySelector","data","length","randomMovieIndex","Math","floor","random","topDayMovie","text","maxLength","truncatedOverview","overview","slice","rating","vote_average","console","log","starsHTML","fullStars","halfStars","emptyStars","repeat","$0d419fa112e607df$var$generateStars","innerHTML","backdrop_path","title","error","$0d419fa112e607df$var$genres","id","name","$0d419fa112e607df$var$TopWeekMovieBox","index","TopWeekMovie","releaseYear","release_date","movieGenresIds","genre_ids","movieGenres","arr1","arr2","finalArr","i","push","join","$0d419fa112e607df$var$movieGenresCompare","$0d419fa112e607df$var$homePageApiData","url","$dIxxU","default","get","$parcel$interopDefault","$dDDEV","params","then","weekMoviesSection","weekMoviesSectionFragment","$0d419fa112e607df$var$createWeekMovies","upcomingSection","randomMovie","upcomingMovie","$0d419fa112e607df$var$createUpcomingMovie","catch","$0d419fa112e607df$var$homePageContent","$2TvXO","mark","_callee","Promise","all"],"version":3,"file":"index.f069c78e.js.map"}