{"mappings":"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","sources":["src/js/api-catalog-page.js"],"sourcesContent":["import axios from 'axios';\nimport {genres, fullStar, halfStar, emptyStar, \n        heroFragment, topMoviesFragment, \n        pagesBtnStartup, emptyApiResponeHero, \n        emptyApiResponeCatalog} from './api-html-fragment.js'\n\nconst params = {\n  page: 1,\n  language: 'en-US',\n  api_key: '682127ed972e56f6bb70ae743d23c1d7',\n};\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${params.api_key}`,\n  },\n};\n\nconst urls = {\n\n  urlDay: `https://api.themoviedb.org/3/trending/movie/day`,\n  urlWeek: `https://api.themoviedb.org/3/trending/movie/week`,\n  page:1,\n  quantity: 20,\n};\n\nconst generateStars = rating => {\n    let fullStars = Math.floor(rating);\n    let halfStars = rating % 1 >= 0.5 ? 1 : 0;\n    let emptyStars = 5 - fullStars - halfStars;\n    return `${fullStar.repeat(fullStars)}${halfStar.repeat(\n      halfStars\n    )}${emptyStar.repeat(emptyStars)}`;\n  };\n  \nconst createHeroMovie = resResponse => {\n    const maxLength = 200;\n    const heroSection = document.querySelector('#hero');\n    const randomMovieIndex = Math.floor(Math.random() * resResponse.data.results.length);\n    const topDayMovie = resResponse.data.results[randomMovieIndex];\n    \n    const cutText = (text, maxLength) => text.length > maxLength ? text.slice(0, maxLength) + '...' : text;\n    const truncatedOverview = cutText(topDayMovie.overview, maxLength);\n    const rating = topDayMovie.vote_average / 2;\n    const starsHTML = generateStars(rating);\n\n    heroSection.innerHTML =heroFragment(topDayMovie.id, topDayMovie.backdrop_path, topDayMovie.title, starsHTML, truncatedOverview)\n  };\n\n//nie dziaÅ‚a\nconst movieGenresCompare = (arr1, arr2) => {\n\tconst finalArr = [];\n\tfor (i = 0; i < arr1.length; i += 1) {\n\t\t\t\tif (arr2.includes(arr1[i].id)) {\n\t\t\t\t\tfinalArr.push(arr1[i].name)\n\t\t\t\t}\n\t\t\t}\n\treturn finalArr.slice(0,2).join(\", \");\n}\n\nconst catalogItem = (movie) =>{\n    const movieGenres = movieGenresCompare(genres, movie.genre_ids)\n    const releaseYear = movie.release_date.slice(0, 4);\n    const rating = movie.vote_average / 2;\n    const starsHTML = generateStars(rating);\n    return topMoviesFragment(movie.id, movie.backdrop_path, movie.title, movieGenres, releaseYear, starsHTML)\n}\nconst emptyResponseCatalog = ()=>{\n    const moviesCatalog = document.querySelector('#catalogSection');\n    catalogSection.innerHTML = emptyApiResponeCatalog\n}\nconst crateCatalog = (movies)=>{\n    const moviesCatalog = document.querySelector('#catalg');\n    let weekMoviesSectionFragment=\"\"\n    movies.forEach( (movie) =>{ \n        weekMoviesSectionFragment = weekMoviesSectionFragment + catalogItem(movie)\n    });\nmoviesCatalog.innerHTML=weekMoviesSectionFragment\n}\nconst createPagesBtn =(totalItems, itemsPerPage) =>{\n    const pagesBtnSection = document.querySelector('#pagesBtnSection');\n    const lastPage = Math.ceil(totalItems / itemsPerPage)\n    if(lastPage<2) return\n\n    pagesBtnSection.innerHTML=pagesBtnStartup(lastPage)\n   \n}\n  function createDefaultHeroSection() {\n    const heroSection = document.querySelector('#hero');\n    heroSection.innerHTML = emptyApiResponeHero;}\n\nconst catalogPageApiData = url =>\n  axios\n    .get(url, { params, ...options })\n    .then(resResponse => {\n        const length=resResponse.data.results.length\n        //const length = 0\n        if (url.includes('day')) {\n            \n            if (length===0){\n               createDefaultHeroSection()\n               return;\n            }\n            createHeroMovie(resResponse)\n            return;\n        }\n        if (length===0){\n            emptyResponseCatalog()\n            return;\n          }\n        crateCatalog(resResponse.data.results)\n        createPagesBtn(resResponse.data.total_results, 20)\n        return;\n    })\n    .catch(error => {\n        emptyResponseCatalog()\n        createDefaultHeroSection()\n      return console.log(error)});\n\nconst catalogPageContent = async () => \n    await Promise.all([\n        catalogPageApiData(urls.urlDay),\n        catalogPageApiData(urls.urlWeek)\n      ]);\n\ncatalogPageContent();\n\n\nconst searchPageApiData = url =>\n    axios\n        .get(url, { params, ...options })\n        .then(resResponse => {\n            const length=resResponse.data.results.length\n\n            if (document.querySelector('#catalg').hasChildNodes()) {\n                const childs = document.querySelectorAll(\"#catalg > li\");\n                childs.forEach(child => child.remove());\n            }\n            if (document.querySelector('#navForm')!==null)\n                document.querySelector(\"#navForm\").remove();\n            \n\n             if (length===0){\n                emptyResponseCatalog()\n                return;\n              }\n            //console.log(resResponse)\n            crateCatalog(resResponse.data.results)\n            createPagesBtn(resResponse.data.total_results, 20)\n            return;\n        })\n        .catch(error => {\n            emptyResponseCatalog()\n            return console.log(error)});\n\n class UrlSearch {\n\n        constructor({titel, adulds, page, country, year}){\n            this.inputs.queryTitle = titel\n            this.inputs.queryAdults = adulds\n            this.inputs.queryPages = page\n            this.inputs.queryRegion = country\n            this.inputs.queryYear = year\n        }\n        \n        setups={\n            coreUrl:\"https://api.themoviedb.org/3/search/movie\",\n            query:\"?\",\n            queryTitle:\"query=\",\n            queryAdults:\"&include_adult=\",       \n            queryPages:\"&page=\",\n            queryRegion:\"&region=\",\n            queryYear:\"&year=\"\n        }\n\n        inputs={\n            queryTitle:\"\",\n            queryAdults:\"\",       \n            queryPages:\"\",\n            queryRegion:\"\",\n            queryYear:\"\"\n        }\n\n        set pageNumber(number){\n               this.inputs.queryPages = number\n        }\n        set coreUrl(url){\n            this.setups.coreUrl = url\n        }\n\n        get url (){\n\n\n            return  (this.setups.coreUrl+\n                    this.setups.query+\n                    this.setups.queryTitle+\n                    this.inputs.queryTitle+\n                    this.setups.queryAdults+\n                    this.inputs.queryAdults+\n                    this.setups.queryPages+\n                    this.inputs.queryPages)\n        }\n\n        }\n\nwindow.addEventListener(\"click\" , event=>{\n    console.log(event.target.parentElement.id)\n    \n    try {\n        if (event.target.id ===\"searchBtn\") {\n            event.preventDefault();\n            console.log(document.querySelector('#catalogFormInput').value.trim())\n            if (document.querySelector('#catalogFormInput').value.trim()==\"\") {\n                return\n            }\n\n            const searchMovieTitle = document.querySelector('#catalogFormInput').value.trim()\n            let searchMovieRegion=\"\"\n            let searchMovieYear=\"\"\n\n            const titel= document.querySelector('#catalogFormInput').value.trim()\n            const adulds=\"false\"\n            const page = \"1\"\n            const country = \"US\"\n            const year = \"2024\"\n\n            const test = new UrlSearch({titel, adulds, page, country, year})\n\n\n            const searchUrl=`https://api.themoviedb.org/3/search/movie?query=${searchMovieTitle}&include_adult=false&page=1${searchMovieRegion}${searchMovieYear}` \n            \n            console.log(\"searchUrl: \", searchUrl)\n            console.log(\"url: \", test.url)\n\n            const searchPageContent = async () => await searchPageApiData(searchUrl)\n\n            searchPageContent(searchUrl);\n\n        }\n    } catch (error) {\n    console.error(error);\n    }\n  \n} )\n\n\n\n\n\n\n    // try {\n    //     if (event.target.parentElement.id ===\"navForm\"){\n    //         console.log(event.target.textContent)\n\n\n\n\n\n\n\n\n    //     }\n    //   } catch (error) {\n    //     console.error(\"ID is not define!\");\n    //   }\n      \n\n        \n\n\n\n\n"],"names":["$2shzp","parcelRequire","$63f816236bb60c84$var$params","page","language","api_key","$63f816236bb60c84$var$options","method","headers","accept","Authorization","$63f816236bb60c84$var$urls","urlDay","urlWeek","quantity","$63f816236bb60c84$var$generateStars","rating","fullStars","Math","floor","halfStars","emptyStars","$94Fp6","fullStar","repeat","halfStar","emptyStar","$63f816236bb60c84$var$catalogItem","movie","movieGenres","arr1","arr2","finalArr","i","length","includes","id","push","name","slice","join","$63f816236bb60c84$var$movieGenresCompare","genres","genre_ids","releaseYear","release_date","vote_average","starsHTML","topMoviesFragment","backdrop_path","title","$63f816236bb60c84$var$emptyResponseCatalog","document","querySelector","catalogSection","innerHTML","emptyApiResponeCatalog","$63f816236bb60c84$var$crateCatalog","movies","moviesCatalog","weekMoviesSectionFragment","forEach","$63f816236bb60c84$var$createPagesBtn","totalItems","itemsPerPage","pagesBtnSection","lastPage","ceil","pagesBtnStartup","$63f816236bb60c84$var$createDefaultHeroSection","emptyApiResponeHero","$63f816236bb60c84$var$catalogPageApiData","url","default","get","then","resResponse","data","results","heroSection","randomMovieIndex","random","topDayMovie","truncatedOverview","text","overview","maxLength","heroFragment","$63f816236bb60c84$var$createHeroMovie","total_results","catch","error","console","log","async","Promise","all","$63f816236bb60c84$var$catalogPageContent","$63f816236bb60c84$var$UrlSearch","constructor","titel","adulds","country","year","this","inputs","queryTitle","queryAdults","queryPages","queryRegion","queryYear","setups","coreUrl","query","pageNumber","number","window","addEventListener","event","target","parentElement","preventDefault","value","trim","searchMovieTitle","searchMovieRegion","searchMovieYear","test","searchUrl","await","hasChildNodes","querySelectorAll","child","remove","searchPageContent"],"version":3,"file":"catalog.fffba0e2.js.map"}